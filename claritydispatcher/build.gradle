/*
 * This file was generated by the Gradle 'init' task.
 */

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:1.6.1"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.21"
    }
}
    apply plugin: 'java'
    apply plugin: 'application'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
if (project.getProperties().get("profile") != "garden") {
    apply plugin: 'com.google.cloud.tools.jib'
    apply from: "gradle/docker.gradle"
}

description = "claritydispatcher"
mainClassName = "com.clarity.claritydispatcher.Application"
archivesBaseName = "claritydispatcher"
assert System.properties["java.specification.version"] == "1.8" || "11" || "12" | "13"

if (project.getProperties().get("profile") == "garden") {
    repositories {
        flatDir {
            dirs 'libs'
        }
        jcenter()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://jcenter.bintray.com" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }
}

ext {
    mapstructVersion = '1.3.0.Final'
    micronautVersion = '1.2.2'
    micronautKafka = '1.2.0'
    micronautSecurityJwt = '1.2.0'
    micronautTestJunit = '1.1.1'
    claritySharedVersion = '0.0.1-SNAPSHOT'
}

dependencies {
    implementation 'io.opentracing.brave:brave-opentracing:0.34.2'
    compile "io.micronaut:micronaut-tracing:${micronautVersion}"
    compile "io.micronaut:micronaut-security-jwt:${micronautSecurityJwt}"
    compile "io.micronaut:micronaut-discovery-client:${micronautVersion}"
    compile "javax.annotation:javax.annotation-api:1.3.2"
    compile "io.micronaut:micronaut-http-client:${micronautVersion}"
    compile "io.micronaut:micronaut-inject:${micronautVersion}"
    compile "io.micronaut:micronaut-validation:${micronautVersion}"
    compile "io.micronaut:micronaut-runtime:${micronautVersion}"
    compile "io.micronaut.configuration:micronaut-kafka:${micronautKafka}"
    compile "io.micronaut.configuration:micronaut-kafka-streams:${micronautKafka}"
    compile "io.micronaut:micronaut-http-server-netty:${micronautVersion}"
    compile "org.web3j:core:4.2.0"
    compile "org.jooq:jool:0.9.14"
    compile "net.jodah:failsafe:2.3.1"
    compile "io.projectreactor:reactor-core:3.2.11.RELEASE"
    compile "an.awesome:pipelinr:0.3"
    runtime "io.zipkin.brave:brave-instrumentation-http:5.6.5"
    runtime "io.zipkin.reporter2:zipkin-reporter:2.10.0"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    if (project.getProperties().get("profile") == "garden") {
        implementation "com.clarity:clarityshared:${claritySharedVersion}"
    } else {
        compile project(":clarityshared")
    }
    compile "com.google.guava:guava:28.1-jre"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.5.0"
    testCompile "org.junit.jupiter:junit-jupiter-engine:5.5.0"
    testCompile "io.micronaut.test:micronaut-test-junit5:${micronautTestJunit}"
    compile "org.mapstruct:mapstruct:${mapstructVersion}"
    compileOnly "org.projectlombok:lombok:1.18.8"
    annotationProcessor "org.projectlombok:lombok:1.18.8"
    compile "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    compile "io.micronaut:micronaut-inject-java:${micronautVersion}"
    annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"
    compile "io.micronaut:micronaut-validation:${micronautVersion}"
    annotationProcessor "io.micronaut:micronaut-validation:${micronautVersion}"
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

