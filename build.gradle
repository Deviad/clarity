/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    id 'idea'
    id 'maven'
    id 'maven-publish'
}
allprojects {
    ext {
        mapstructVersion = '1.3.0.Final'
        micronautVersion = '1.2.2'
        micronautKafka = '1.2.0'
        micronautSecurityJwt = '1.2.0'
        micronautTestJunit = '1.1.1'
    }
    setSourceCompatibility(JavaVersion.VERSION_11)
    setTargetCompatibility(JavaVersion.VERSION_11)
    repositories {
        jcenter()
        mavenCentral()
        gradlePluginPortal()
        mavenLocal()
        maven { url "https://jcenter.bintray.com" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }
    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
        sourceSets {
            "main" {
                java.srcDir("src/main/java")
                resources.srcDir("resources")
                setBuildDir(file("target"))
                output.dir(file("$buildDir/$name"))
                java.outputDir = file("$buildDir/$name")
            }
            "test" {
                java.srcDir("test/java")
                resources.srcDir("test-resources")
                setBuildDir(file("target"))
                output.dir(file("$buildDir/$name"))
                java.outputDir = file("$buildDir/$name")
            }
        }
    }
    idea {
        module {
            // use the same output folders as gradle, so the pythonDevelop task works correctly
            buildDir = file("target")
            outputDir = sourceSets["main"].output.classesDirs.singleFile
            testOutputDir = sourceSets["test"].output.classesDirs.singleFile
            inheritOutputDirs = false
        }
    }
//    if(project.convention.findPlugin(JavaPluginConvention)) {
//        // Change the output directory for the main and test source sets back to the old path
//        sourceSets.main.output.classesDir = new File(buildDir, "classes/main")
//        sourceSets.test.output.classesDir = new File(buildDir, "classes/test")
//    }
    wrapper {
        gradleVersion = '5.6.2'
        distributionType = Wrapper.DistributionType.BIN
    }
}
subprojects {
    group = 'com.clarity'
    version = "0.0.1-SNAPSHOT"
}

