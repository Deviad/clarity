/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'application'
    id 'maven'
    id 'maven-publish'

}
mainClassName = "com.clarity.claritydispatcher.Application"

ext {
    mapstructVersion = '1.3.0.Final'
    micronautVersion = '1.2.0.BUILD-SNAPSHOT'
}

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
    maven {
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }

    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    sourceSets {
        "main" {
            java.srcDir("src/main/java")
            resources.srcDir("resources")
            setBuildDir(file("target"))
            output.dir(file("$buildDir/$name"))
            java.outputDir = file("$buildDir/$name")
        }
        "test" {
            java.srcDir("test/java")
            resources.srcDir("test-resources")
            setBuildDir(file("target"))
            output.dir(file("$buildDir/$name"))
            java.outputDir = file("$buildDir/$name")
        }
    }
}

idea {
    module {
        // use the same output folders as gradle, so the pythonDevelop task works correctly
        buildDir = file("target")
        outputDir = sourceSets["main"].output.classesDirs.singleFile
        testOutputDir = sourceSets["test"].output.classesDirs.singleFile
        inheritOutputDirs = false
    }
}


dependencies {
    implementation 'io.opentracing.brave:brave-opentracing:0.34.2'
    compile "io.micronaut:micronaut-tracing:${micronautVersion}"
    compile "io.micronaut:micronaut-security-jwt:${micronautVersion}"
    compile "io.micronaut:micronaut-discovery-client:${micronautVersion}"
    compile 'javax.annotation:javax.annotation-api:1.3.2'
    compile "io.micronaut:micronaut-http-client:${micronautVersion}"
    compile 'com.clarity:clarityshared:0.0.1-SNAPSHOT'
    compile "io.micronaut:micronaut-inject:${micronautVersion}"
    compile "io.micronaut:micronaut-validation:${micronautVersion}"
    compile "io.micronaut:micronaut-runtime:${micronautVersion}"
    compile "io.micronaut.configuration:micronaut-kafka:${micronautVersion}"
    compile "io.micronaut.configuration:micronaut-kafka-streams:${micronautVersion}"
    compile "io.micronaut:micronaut-http-server-netty:${micronautVersion}"
    compile 'org.web3j:core:4.2.0'
    compile "org.jooq:jool:0.9.14"
    compile 'io.projectreactor:reactor-core:3.2.11.RELEASE'
    compile 'an.awesome:pipelinr:0.3'
    runtime 'io.zipkin.brave:brave-instrumentation-http:5.6.5'
    runtime 'io.zipkin.reporter2:zipkin-reporter:2.10.0'
    runtime 'ch.qos.logback:logback-classic:1.2.3'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.5.0'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.5.0'
    testCompile 'io.micronaut.test:micronaut-test-junit5:1.1.0'
    compile "org.mapstruct:mapstruct:${mapstructVersion}"
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    compile "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    compile "io.micronaut:micronaut-inject-java:${micronautVersion}"
    annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"
    compile "io.micronaut:micronaut-validation:${micronautVersion}"
    annotationProcessor "io.micronaut:micronaut-validation:${micronautVersion}"
}

group = 'com.clarity'
version = '0.0.1-SNAPSHOT'
description = 'claritydispatcher'
buildDir = "target"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

