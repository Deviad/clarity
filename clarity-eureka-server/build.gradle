buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
plugins {
    id 'application'
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'maven-publish'

application {
    mainClassName = 'com.clarity.clarityeurekaserver.ClarityEurekaServerApplication'
}
//        <dependency>
//        <groupId>com.sun.xml.bind</groupId>
//            <artifactId>jaxb-core</artifactId>
//<version>2.3.0.1</version>
//        </dependency>
//        <dependency>
//        <groupId>javax.xml.bind</groupId>
//            <artifactId>jaxb-api</artifactId>
//<version>2.3.1</version>
//        </dependency>
//        <dependency>
//        <groupId>com.sun.xml.bind</groupId>
//            <artifactId>jaxb-impl</artifactId>
//<version>2.3.1</version>
//        </dependency>


bootJar {
    baseName = 'clarityeurekaserver'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
    mavenLocal()
}


dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2'
    }
}

dependencies {
    compile('com.sun.xml.bind:jaxb-core:2.3.0.1')
    compile('javax.xml.bind:jaxb-api:2.3.1')
    compile('com.sun.xml.bind:jaxb-impl:2.3.1')
    compile('org.springframework.cloud:spring-cloud-config-client:2.1.3.RELEASE')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    sourceSets {
        "main" {
            java.srcDir("src/main/java")
            resources.srcDir("resources")
            setBuildDir(file("target"))
            output.dir(file("$buildDir/$name"))
            java.outputDir = file("$buildDir/$name")
        }
        "test" {
            java.srcDir("test/java")
            resources.srcDir("test-resources")
            setBuildDir(file("target"))
            output.dir(file("$buildDir/$name"))
            java.outputDir = file("$buildDir/$name")
        }
    }
}

idea {
    module {
        // use the same output folders as gradle, so the pythonDevelop task works correctly
        buildDir = file("target")
        outputDir = sourceSets["main"].output.classesDirs.singleFile
        testOutputDir = sourceSets["test"].output.classesDirs.singleFile
        inheritOutputDirs = false
    }
}

buildDir = 'target'
group = 'com.clarity'
version = '0.0.1-SNAPSHOT'
description = 'Configuration Server'
